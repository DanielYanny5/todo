{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\300281327\\\\Desktop\\\\todo\\\\frontend\\\\src\\\\Tasks.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './Tasks.css';\nimport Todo from './Todo';\nimport TodoForm from './TodoForm';\nimport initialTasks from './InitialTasks';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tasks() {\n  _s();\n  const [tasks, setTasks] = useState(initialTasks);\n  const TODO_BASE_URL = 'http://localhost:3000/todos';\n  const fetchData = async () => {\n    const response = await fetch(TODO_BASE_URL);\n    const data = await response.json();\n    setTasks(tasks => data);\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  function addTodo(task) {\n    const postBody = JSON.stringify({\n      title: task,\n      completed: false\n    });\n    fetch(TODO_BASE_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: postBody\n    }).then(response => response.json()).then(result => {\n      setTasks(tasks => [...tasks, {\n        id: result.id,\n        title: result.title,\n        completed: result.completed\n      }]);\n    });\n  }\n  function deleteTodo(taskId) {\n    fetch(TODO_BASE_URL + '/' + taskId, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(() => setTasks(tasks => tasks.filter(task => task.id !== taskId)));\n  }\n  function filterTodo(completed) {\n    setTasks(tasks => tasks.filter(task => task.completed == completed));\n  }\n  function setTodoCompleted(todo) {\n    const putBody = JSON.stringify({\n      completed: !todo.completed\n    });\n    fetch(TODO_BASE_URL + '/' + todo.id, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: putBody\n    }).then(() => {\n      setTasks(tasks => {\n        return tasks.map(task => {\n          if (task.id === todo.id) {\n            return {\n              ...task,\n              ...{\n                completed: !todo.completed\n              }\n            };\n          }\n          return task;\n        });\n      });\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Tasks\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Todo ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: tasks.map(todo => {\n            return /*#__PURE__*/_jsxDEV(Todo, {\n              todo: todo,\n              deleteTodo: deleteTodo,\n              setTodoCompleted: setTodoCompleted\n            }, todo.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        filterTodo(false);\n      },\n      children: \"Hide completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TodoForm, {\n        addTodo: addTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Tasks, \"QCuzOqa/y6sI3uMmItSZzmQ79iY=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["useState","useEffect","Todo","TodoForm","initialTasks","Tasks","tasks","setTasks","TODO_BASE_URL","fetchData","response","fetch","data","json","addTodo","task","postBody","JSON","stringify","title","completed","method","headers","body","then","result","id","deleteTodo","taskId","filter","filterTodo","setTodoCompleted","todo","putBody","map"],"sources":["C:/Users/300281327/Desktop/todo/frontend/src/Tasks.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nimport './Tasks.css';\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm';\r\n\r\nimport initialTasks from './InitialTasks';\r\n\r\nfunction Tasks() {\r\n  const [tasks, setTasks] = useState(initialTasks);\r\n\r\n  const TODO_BASE_URL = 'http://localhost:3000/todos';\r\n\r\n  const fetchData = async () => {\r\n    const response = await fetch(TODO_BASE_URL)\r\n    const data = await response.json()\r\n    setTasks((tasks) => data)\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [])\r\n\r\n  function addTodo(task) {\r\n    const postBody = JSON.stringify({\r\n      title: task,\r\n      completed: false,\r\n    })\r\n\r\n    fetch(TODO_BASE_URL, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: postBody\r\n    }).then(\r\n      response => response.json()\r\n    ).then((result) => {\r\n      setTasks(tasks => [\r\n        ...tasks,\r\n        {\r\n          id: result.id,\r\n          title: result.title,\r\n          completed: result.completed,\r\n        }\r\n      ])\r\n    })\r\n  }\r\n\r\n  function deleteTodo(taskId) {\r\n    fetch(TODO_BASE_URL + '/' + taskId, {\r\n      method: 'DELETE',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    }).then(() =>\r\n      setTasks((tasks) => tasks.filter((task) => task.id !== taskId))\r\n    )\r\n  }\r\n\r\n  function filterTodo(completed) {\r\n\r\n      setTasks((tasks) => tasks.filter((task) => task.completed == completed))\r\n  \r\n  }\r\n\r\n  function setTodoCompleted(todo) {\r\n    const putBody = JSON.stringify({\r\n      completed: !todo.completed\r\n    })\r\n\r\n    fetch(TODO_BASE_URL + '/' + todo.id, {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: putBody\r\n    }).then(() => {\r\n      setTasks((tasks) => {\r\n        return tasks.map((task) => {\r\n          if (task.id === todo.id) {\r\n            return {\r\n              ...task, ...{\r\n                completed: !todo.completed\r\n              }\r\n            }\r\n          }\r\n\r\n          return task;\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Tasks\">\r\n        <h1>Tasks</h1>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Todo ID</th>\r\n              <th>Title</th>\r\n              <th>Completed</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {tasks.map((todo) => {\r\n              return <Todo key={todo.id} todo={todo} deleteTodo={deleteTodo} setTodoCompleted={setTodoCompleted} />\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <button\r\n        onClick={() => {\r\n          filterTodo (false)\r\n        }}\r\n      >\r\n        Hide completed\r\n      </button>\r\n\r\n      <div>\r\n        <TodoForm addTodo={addTodo} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Tasks;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}